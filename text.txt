<FormField
            control={form.control}
            name="items"
            render={() => (
              <FormItem>
                <div className="mb-4">
                  <FormLabel htmlFor="items">Items</FormLabel>
                  <FormDescription>
                    Select the items that make up this outfit
                  </FormDescription>
                </div>
                {items.length === 0 && (
                  <div className="flex flex-col items-center justify-center">
                    <p className="text-gray-500 text-sm">No items found</p>
                    <Button
                      onClick={() =>
                        router.push(`/${params.wardrobeId}/items/new`)
                      }
                    >
                      Add Item
                    </Button>
                  </div>
                )}
                {items.map(item => (
                  <FormField
                    key={item.id}
                    control={form.control}
                    name="items"
                    render={({ field }) => {
                      return (
                        <FormItem
                          key={item.id}
                          className="flex flex-row items-start space-x-3 space-y-0"
                        >
                          <FormControl>
                            <Checkbox
                              checked={field.value?.includes(item.id)}
                              onCheckedChange={checked => {
                                return checked
                                  ? field.onChange([...field.value, item.id])
                                  : field.onChange(
                                      field.value.filter(
                                        (id: string) => id !== item.id
                                      )
                                    );
                              }}
                            />
                          </FormControl>
                          <FormLabel htmlFor={item.id}>
                            <div className="flex flex-row items-center space-x-2">
                              <Avatar>
                                <AvatarImage
                                  src={item.images[0].url}
                                  alt={item.name}
                                />
                              </Avatar>
                              <p>{item.name}</p>
                            </div>
                          </FormLabel>
                        </FormItem>
                      );
                    }}
                  />
                ))}
              </FormItem>
            )}
          />
images={outfit.items
              .map(item => item.images.map(image => image.url))
              .flat()}